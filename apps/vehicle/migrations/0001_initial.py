# Generated by Django 4.2.11 on 2024-08-01 07:08

import dj_rest_kit.helpers
import dj_rest_kit.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('package', '0001_initial'),
        ('features', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BodyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Body Types',
                'verbose_name_plural': 'Body Types',
                'db_table': 'body_types',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('vehicle_type', models.IntegerField(blank=True, choices=[(1, 'Car'), (2, 'Bike')], null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=dj_rest_kit.helpers.PathAndRename('brand-logos'), validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp']), dj_rest_kit.validators.image_size])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Brands',
                'verbose_name_plural': 'Brands',
                'db_table': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Colour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Colors',
                'verbose_name_plural': 'Colors',
                'db_table': 'colors',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to=dj_rest_kit.helpers.PathAndRename('model-image'), validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp']), dj_rest_kit.validators.image_size])),
                ('is_active', models.BooleanField(default=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brand_models', to='vehicle.brand')),
            ],
            options={
                'verbose_name': 'Models',
                'verbose_name_plural': 'Models',
                'db_table': 'models',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('vehicle_type', models.IntegerField(blank=True, choices=[(1, 'Car'), (2, 'Bike')], null=True)),
                ('year_of_registration', models.IntegerField()),
                ('month_of_registration', models.IntegerField()),
                ('is_from_mfk', models.BooleanField(default=0)),
                ('last_mfk_inspection_year', models.IntegerField(default=0)),
                ('last_mfk_inspection_month', models.IntegerField(default=0)),
                ('is_type_number_manual', models.BooleanField(default=0)),
                ('running_mileage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('transmission', models.IntegerField(blank=True, choices=[(1, 'Automatic'), (2, 'Manual')], null=True)),
                ('vehicle_condition', models.IntegerField(blank=True, choices=[(1, 'New'), (2, 'Used')], null=True)),
                ('chasis_number', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('fuel_type', models.IntegerField(blank=True, choices=[(1, 'Gasoline'), (2, 'Diesel'), (3, 'Electric'), (4, 'Hybrid')], null=True)),
                ('cubic_capacity', models.IntegerField(default=0)),
                ('doors', models.IntegerField(default=0)),
                ('energy_efficiency', models.TextField(blank=True, null=True)),
                ('fuel_consumption', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('horsepower', models.IntegerField(default=0)),
                ('cylinders', models.IntegerField(default=0)),
                ('kerb_weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('vehicle_total_weight', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('gear_available', models.IntegerField(default=0)),
                ('addition_information', models.TextField(blank=True, null=True)),
                ('vehicle_rc', models.ImageField(blank=True, null=True, upload_to=dj_rest_kit.helpers.PathAndRename('vehicle-rc'), validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp', 'doc', 'docx', 'pdf', 'xlsx', 'xls', 'csv']), dj_rest_kit.validators.document_size])),
                ('warranty_type', models.IntegerField(blank=True, choices=[(1, 'From date'), (2, 'From registration date'), (3, 'From takeover'), (4, 'From guarantee')], null=True)),
                ('additional_guarantee_text', models.CharField(blank=True, max_length=250, null=True)),
                ('is_leasing', models.BooleanField(default=0)),
                ('leasing_text', models.CharField(blank=True, max_length=100, null=True)),
                ('is_sold', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_verify', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1, 'Accepted'), (0, 'Rejected'), (2, 'Pending')], default=2)),
                ('activation_date', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('body_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='body_type_vehicles', to='vehicle.bodytype')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand_vehicles', to='vehicle.brand')),
                ('exterior_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_exterior_color', to='vehicle.colour')),
                ('interior_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_interior_color', to='vehicle.colour')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_vehicles', to='vehicle.model')),
                ('multimedia', models.ManyToManyField(blank=True, to='features.multimediafeature')),
                ('optional_features', models.ManyToManyField(blank=True, to='features.optionalfeature')),
                ('safety_and_assistance', models.ManyToManyField(blank=True, to='features.safetyassistancefeature')),
                ('standard_features', models.ManyToManyField(blank=True, to='features.standardfeature')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscription_vehicles', to='package.subscription')),
            ],
            options={
                'verbose_name': 'Vehicles',
                'verbose_name_plural': 'Vehicles',
                'db_table': 'vehicles',
            },
        ),
        migrations.CreateModel(
            name='VehicleWishlists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.BooleanField(default=True)),
                ('testing_field', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_user', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_vehicle', to='vehicle.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Wishlist',
                'verbose_name_plural': 'Vehicle Wishlist',
                'db_table': 'vehicle_wishlist',
            },
        ),
        migrations.CreateModel(
            name='VehicleTypeNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('chasis_number', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_seats', models.IntegerField(blank=True, default=0, null=True)),
                ('cylinder', models.IntegerField(blank=True, default=0, null=True)),
                ('fuel_type', models.IntegerField(blank=True, choices=[(1, 'Gasoline'), (2, 'Diesel'), (3, 'Electric'), (4, 'Hybrid')], null=True)),
                ('safety_rating', models.IntegerField(blank=True, default=0, null=True)),
                ('type_number', models.CharField(blank=True, max_length=100, null=True)),
                ('first_registration_year', models.IntegerField(blank=True, default=0, null=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vehicle.brand')),
                ('model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vehicle.model')),
            ],
            options={
                'verbose_name': 'Vehicle type number',
                'verbose_name_plural': 'Vehicle type number',
                'db_table': 'vehicle_type_number',
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=dj_rest_kit.helpers.PathAndRename('vehicle-images'), validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg', 'webp']), dj_rest_kit.validators.image_size])),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_images', to='vehicle.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Images',
                'verbose_name_plural': 'Vehicle Images',
                'db_table': 'vehicle_images',
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='type_number',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_type_number', to='vehicle.vehicletypenumber'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_vehicles', to=settings.AUTH_USER_MODEL),
        ),
    ]
